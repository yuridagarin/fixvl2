--◊˜’ﬂ£∫—œæ¸
--¥¥Ω®»’∆⁄£∫07ƒÍ11‘¬13»’14:50
-- ¶√≈πÿø®π´π≤∫Ø ˝Ω≈±æŒƒº˛
Include("\\script\\lib\\globalfunctions.lua");
Include("\\script\\task\\faction_back_room\\back_room_head.lua");
Include("\\script\\task\\faction_back_room\\route_function.lua");
--ªÒµ√√ÿ “µÿÕºID°¢À˜“˝”Îº”‘ÿ¥Œ ˝£¨√ª”–∂‡”‡µÿÕº ±∑µªÿ0,0,0
function BR_FindIdleRoom_test(nFaction)
	return TB_BACKROOM[nFaction],0,0;
end;
function BR_FindIdleRoom(nFaction,nType)
	if UNCOMPLETED_VERSION == 1 then
		return BR_FindIdleRoom_test(nFaction);
	end;
	local nCount = 0;
	local nMaxRoomNum = 0;
	if nType == 1 then
		nCount = BR_GetRouteDynamicMapCount(nFaction);
		nMaxRoomNum = MAX_ROUTE_ROOM_COUNT;
	elseif nType == 2 then
		nCount = BR_GetShareDynamicMapCount();
		nMaxRoomNum = MAX_ROOM_COUNT;
	end;
	if nCount >= nMaxRoomNum then
		return 0,0,0;
	end;
	local nMapID,nMapIdx = DynamicLoadMap(TB_BACKROOM[nFaction]);
	return nMapID,nMapIdx,nCount;
end;
--ªÒµ√µ±«∞∑˛ŒÒ∆˜“—æ≠∂ØÃ¨º”‘ÿ¡À∂‡…Ÿ’≈ ¶√≈πÿø®µƒµÿÕº
function BR_GetDynamicMapCount()
	local nCount = 0;
	for i=1,getn(TB_BACKROOM) do
		nCount = nCount + GetMapLoadCount(TB_BACKROOM[i]);
	end;
	return nCount;
end;
--ªÒ»°ƒ≥∏ˆ¡˜≈…µ±«∞“—”√µÿÕº ˝¡ø
function BR_GetRouteDynamicMapCount(nFaction,nRoute)
	local tbMapID = gf_GetDataTable(GetSameMaps(TB_BACKROOM[nFaction]));
	local nCount = 0;
	local nMapID = 0;
	for i=1,getn(tbMapID) do
		nMapID = tbMapID[i];
		if mf_GetMissionV(MISSION_ID,MV_MAP_TYPE,nMapID) == nRoute then
			nCount = nCount + 1;
		end;
	end;
	return nCount;
end;
--ªÒ»°π≤œÌµÿÕº“— π”√ ˝¡ø
function BR_GetShareDynamicMapCount()
	local nCount = 0;
	for i=1,7 do	--7∏ˆ√≈≈…
		nCount = BR_GetRouteDynamicMapCount(i,0) + nCount;
	end;
	return nCount;
end;
--…æ≥˝ƒ≥“ª√≈≈…µƒ¡Ó≈∆
function BR_DelLingPai(nFaction,nCount)
	return DelItem(TB_LINGPAI[nFaction][1],TB_LINGPAI[nFaction][2],TB_LINGPAI[nFaction][3],nCount);
end;
--¡Ÿ ±±‰¡ø≥ı ºªØ
function BR_ClearTempTask()
	for i=TTSK_BEGIN,TTSK_END do
		SetTaskTemp(i,0);
	end;
end;
--»ŒŒÒ±‰¡ø«Â0
function BR_ClearNCTask()
	for i=TSK_NC_BEGIN,TSK_NC_END do
		SetTask(i,0);
	end;
end;
--µÿÕº±‰¡ø«Â0
function BR_ClearMapTask(nMapID)
	for i=MAP_TSK_BEGIN,MAP_TSK_END do
		SetMapTaskTemp(nMapID,i,0);
	end;
end;
--ø™ ºœ¬“ªπÿ
function BR_NextStage()
	local nMapID = BR_GetCurMapID();
	BR_ClearMapNpcSafe(nMapID);
	local nCurDiff,nCurStage = 0,0;
	nCurDiff = BR_GetCurDiff();
	nCurStage = BR_GetCurStage();
	local nPIdx = GetMissionV(MV_PLAYERINDEX);
	if nCurStage == 1 or nCurStage == 5 or nCurStage == 9 then
		if BR_EnterNextStageCheck(nCurDiff,nCurStage,nPIdx) == 0 then
			Say2SomeOne(nPIdx,"Bπn hi÷n kh´ng ÆÒ Æi“u ki÷n Æ” vµo ∂i, xin h∑y ki”m tra giÌi hπn v≠Ót ∂i Î Ti’p d…n mÀt th t s≠ m´n.",0);
			Msg2MSAll(MISSION_ID,"Bπn hi÷n kh´ng ÆÒ Æi“u ki÷n Æ” vµo ∂i, xin h∑y ki”m tra giÌi hπn v≠Ót ∂i Î Ti’p d…n mÀt th t s≠ m´n.");
			BR_ChangeMSState(MS_STATE_END_WAITING);
			BR_CreateDisciple();
			return 0;
		end;
	end;
	BR_InitStage(nCurDiff,nCurStage);
	BR_RestorePlayer();
	local nPIdx = GetMissionV(MV_PLAYERINDEX);
	if nCurStage == 1 then	--»Áπ˚ «µ⁄“ªπÿ
		SetTask(TSK_ENTER_TYPE,0, 0, nPIdx);	--Ω¯»Î¿‡–Õ«ÂŒ™0
		SetMissionV(MV_TOTAL_TIME,0);	--¿€º∆ ±º‰«Â0
	end;
	Msg2MSAll(MISSION_ID,""..TB_DIFF_NAME[nCurDiff].."ßÈ kh„ ∂i "..nCurStage.." bæt Æ«u");
	if DEBUG_VERSION == 1 then
		BR_CreateDisciple();
	end;
end;
--‘›Õ£πÿø®
function BR_PauseStage()
	BR_ChangeMSState(MS_STATE_READY);
	BR_CreateDisciple();
end;
--Ω· ¯ƒ≥“ªπÿ°¢π˝πÿ
function BR_EndStage()
	BR_UnInitStageEven(nCurDiff,nCurStage);
	local nCurDiff,nCurStage = 0,0;
	local nPIdx = GetMissionV(MV_PLAYERINDEX);
	nCurDiff = BR_GetCurDiff();
	nCurStage = BR_GetCurStage();
	local nNextDiff,nNextStage = nCurDiff,nCurStage+1;
	local nUseTime = GetTime() - GetMissionV(MV_BEGIN_TIME) + GetMissionV(MV_TOTAL_TIME); --º∆À„±æ—≠ª∑◊‹”√ ±
	SetMissionV(MV_TOTAL_TIME,nUseTime);
	local nEnterType = GetTask(TSK_ENTER_TYPE,nPIdx);
	if nEnterType == 1 then
		Msg2MSAll(MISSION_ID,"Bπn Æ∑ v≠Ót qua "..TB_DIFF_NAME[nCurDiff].."∂i "..nCurStage..", Æang Æ‰c d˜ li÷u, ÆÈ kh„ nµy kh´ng ghi lπi thÍi gian ");
	else
		Msg2MSAll(MISSION_ID,"Bπn Æ∑ v≠Ót qua "..TB_DIFF_NAME[nCurDiff].."∂i "..nCurStage..", thÍi gian: "..tf_GetTimeString(nUseTime)..".");
	end;
	if nCurStage == MAX_STAGE then	--»Áπ˚ «—≠ª∑ƒ⁄◊Ó∫Û“ªπÿ
		nNextDiff = nCurDiff + 1;	--Ω¯»Îœ¬“ª—≠ª∑
		nNextStage = 1;				--ªÿπÈµ⁄1πÿ
		if nBeginTime ~= 0 then
			if nEnterType == 1 then
				Msg2MSAll(MISSION_ID,"ChÛc mıng bπn Æ∑ v≠Ót qua ∂i "..TB_DIFF_NAME[nCurDiff]..", Æang Æ‰c d˜ li÷u, ÆÈ kh„ nµy kh´ng ghi lπi thÍi gian");
				WriteLog(LOG_HEADER..", ÆÈ kh„: "..nCurDiff..", ∂i  "..nCurStage..". T™n: "..GetName(nPIdx)..", c p:"..GetLevel(nPIdx)..","..GetMissionV(MV_ROUTE)..", thÍi gian: ßang Æ‰c sË li÷u, kh´ng ghi lπi thÍi gian");			
			else
				Msg2MSAll(MISSION_ID,"ChÛc mıng bπn Æ∑ v≠Ót qua ∂i "..TB_DIFF_NAME[nCurDiff]..", thÍi gian: "..tf_GetTimeString(nUseTime));
				if BR_UpDateTimeRecord(nCurDiff,nUseTime,nPIdx) == 1 then		--Ã·Ωª ±º‰
					Msg2MSAll(MISSION_ID,"ChÛc mıng bπn Æ∑ chi’n thæng b∂n th©n "..TB_DIFF_NAME[nCurDiff].."V≠Ót ∂i vÌi thµnh t›ch nhanh nh t");
				end;
				WriteLog(LOG_HEADER..", ÆÈ kh„: "..nCurDiff..", ∂i  "..nCurStage..". T™n: "..GetName(nPIdx)..", c p:"..GetLevel(nPIdx)..","..GetMissionV(MV_ROUTE)..", thÍi gian: "..nUseTime);			
			end;
		end;
	end;
	if nCurStage == 4 or nCurStage == 8 or nCurStage == 9 then
		BR_CreateAwardBox(nCurDiff,nCurStage,nPIdx);	--¥¥Ω®±¶œ‰
		if GetTask(TSK_WC_FAIL_TIMES,nPIdx) >= MAX_FAILURE_TIMES then	-- ß∞‹≥¨π˝“ª∂®¥Œ ˝∫Û◊‘∂Ø¥Êµµ
			BR_SaveRecord(nNextDiff,nNextStage,nPIdx);
		end;
	end;
	BR_SetCurDiff(nNextDiff);	--…Ë÷√œ¬“ªπÿ
	BR_SetCurStage(nNextStage);	--…Ë÷√œ¬“ªπÿ
	if nCurDiff == MAX_DIFFICULTY_LEVEL and nCurStage == MAX_STAGE then	--»Áπ˚ «◊Ó∫Û—≠ª∑◊Ó∫Ûπÿø®
		local szFactionName = gf_GetFactionName(GetMissionV(MV_FACTION));
		Msg2MSAll(MISSION_ID,"ChÛc mıng bπn Æ∑ v≠Ót qua toµn bÈ kh∂o nghi÷m, x¯ng Æ∏ng lµ Æ÷ tˆ xu t sæc cÒa "..szFactionName..", xin h∑y ÆÓi mÈt l∏t, sœ lÀp t¯c chuy”n bπn ra ngoµi")
		BR_FinalEndStage();
		return 0;
	end;
	if nCurStage == MAX_STAGE or nCurStage == floor(MAX_STAGE/2) or nCurStage == MAX_STAGE-1 then	--¥ÚÕÍ4,8,9πÿ∫Û
		BR_PauseStage();	--≤π∏¯Ω◊∂Œ
	else	--Ω¯»Î∂Ã‘›–›œ¢∆⁄
		--“‘Ω· ¯ƒ≥“ªπÿø®◊˜Œ™πÿø®÷Æº‰µƒ∑÷ΩÁµ„
		BR_ChangeMSState(MS_STATE_SHORT_PAUSE);
	end;
end;
--Õ®»´πÿ
function BR_FinalEndStage()
	BR_ChangeMSState(MS_STATE_END_WAITING);
	BR_CreateDisciple();
end;
--¥¥Ω®Ω”“˝µ‹◊”
function BR_CreateDisciple()
	local nFaction = GetMissionV(MV_FACTION);
	local nMapID = BR_GetCurMapID();
	local nMapX = TB_ENTRY_POS[nFaction][1];
	local nMapY = TB_ENTRY_POS[nFaction][2];
	local nNpcIdx = CreateNpc("V≠¨ng An Thπch","Ti’p d…n Æ÷ tˆ ",nMapID,nMapX,nMapY);
	SetNpcScript(nNpcIdx,"\\script\\task\\faction_back_room\\npc_disciple.lua");
end;
--¥¥Ω®πÿø®NPC
function BR_CreateStageNpc(nDiff,nStage)
	local nRoute = GetMissionV(MV_ROUTE);
	local nFaction = GetMissionV(MV_FACTION);
	local nNpcModelName = TB_STAGE_INFO[nRoute][0][1][1]..nDiff;
	local nNpcName = TB_STAGE_INFO[nRoute][0][1][2];
	local nNpcCount = TB_STAGE_INFO[nRoute][nDiff][1][nStage];
	local nMapID = BR_GetCurMapID();
	local nMapX,nMapY = 0,0;
	local nNpcIdx = 0;
	local nPosSize = getn(TB_NPC_POS[nFaction]);
	local nPosIdx = 0;
	for i=1,nNpcCount do
		nPosIdx = mod(i-1,nPosSize)+1;
		nMapX,nMapY = TB_NPC_POS[nFaction][nPosIdx][1],TB_NPC_POS[nFaction][nPosIdx][2];
		nNpcIdx = BR_CreateNpc(nNpcModelName,nNpcName,nMapID,nMapX,nMapY);
		SetNpcDeathScript(nNpcIdx,"\\script\\task\\faction_back_room\\death_npc.lua");
		SetMissionV(MV_NPC_INDEX_BEGING+i-1,nNpcIdx);
	end;
end;
--¥¥Ω®BOSS
function BR_CreateBoss(nDiff)
	local nRoute = GetMissionV(MV_ROUTE);
	local nFaction = GetMissionV(MV_FACTION);
	local nNpcModelName = TB_STAGE_INFO[nRoute][0][2][1]..nDiff;
	local nNpcName = TB_STAGE_INFO[nRoute][0][2][2];
	local nMapID = BR_GetCurMapID();
	local nMapX,nMapY = TB_BOSS_POS[nFaction][1],TB_BOSS_POS[nFaction][2];
	local nNpcIdx = BR_CreateNpc(nNpcModelName,nNpcName,nMapID,nMapX,nMapY);
	SetMissionV(MV_NSC_BOSS_INDEX,nNpcIdx);
	SetNpcDeathScript(nNpcIdx,"\\script\\task\\faction_back_room\\death_npc.lua");	
end;
--ºÏ≤Èµ±«∞◊¥øˆ «∑Òπ˝πÿ
function BR_CheckWinCondition(nDiff,nStage)
	local nMapID = BR_GetCurMapID();
	local nCurKillCount = GetMissionV(MV_NSC_KILL_NPC_COUNT);
	local nNeedKillCount = GetMissionV(MV_NSC_NEED_KILL_NUMBER);
	if nCurKillCount >= nNeedKillCount then
		return 1;
	else
		return 0;
	end;
end;
--“ª÷‹“ª«Â
function BR_WeeklyClear()
	local nWeek = tonumber(date("%y%W"));
	if GetTask(TSK_ATTEND_WEEK) < nWeek then
		for i=TSK_WC_BEGIN,TSK_WC_END do
			SetTask(i,0);
		end;
	end;
end;
--∞— ±º‰£®µ•Œª√Î£©◊™ªªŒ™—≠ª∑¥Œ ˝
function BR_TransformTime2Loop(nState,nSec)
	local nLoop = 0;
	if nState == MS_STATE_READY then
		nLoop = floor((nSec/60)/READY_TIMER_INTERVAL)-1;
	elseif nState == MS_STATE_STARTED then
		nLoop = floor((nSec/60)/STARTED_TIMER_INTERVAL)-1;
	elseif nState == MS_STATE_SHORT_PAUSE then
		nLoop = floor((nSec/60)/SHORT_PAUSE_TIMER_COUNT)-1;
	elseif nState == MS_STATE_END_WAITING then
		nLoop = floor((nSec/60)/ENDING_TIMER_INTERVAL)-1;
	elseif nState == MS_STATE_IDEL then
		nLoop = 0;
	end;
	return nLoop;
end;
--…Ë÷√—≠ª∑◊‹ ˝
function BR_SetStageTimerLoop(nLoop)
	SetMissionV(MV_TIMER_LOOP,nLoop);
end;
--ªÒ»°µ±«∞—≠ª∑◊‹ ˝
function BR_GetStageTimerLoop()
	return GetMissionV(MV_TIMER_LOOP);
end;
--ªÒ»°µ±«∞ƒ—∂»
function BR_GetCurDiff()
	return GetMissionV(MV_CUR_DIFF);
end;
--…Ë÷√µ±«∞ƒ—∂»
function BR_SetCurDiff(nDiff)
	SetMissionV(MV_CUR_DIFF,nDiff);
end;
--ªÒ»°µ±«∞ «µ⁄º∏πÿ
function BR_GetCurStage()
	return GetMissionV(MV_CUR_STAGE);
end;
--…Ë÷√µ±«∞ «µ⁄º∏πÿ
function BR_SetCurStage(nStage)
	SetMissionV(MV_CUR_STAGE,nStage);
end;
--ªÒ»°Missionµ±«∞◊¥Ã¨
function BR_GetMSCurState()
	return GetMissionV(MV_MISSION_STATE);
end;
--ªÒ»°º∆ ±∆˜µ±«∞◊¥Ã¨
function BR_GetTimerState()
	return GetMissionV(MV_MISSION_STATE);
end;
--…Ë÷√º∆ ±∆˜µ±«∞◊¥Ã¨
function BR_SetTimerState(nState)
	SetMissionV(MV_MISSION_STATE,nState);
end;
--ºÏ≤Èµ±«∞µÿÕºID «∑Ò∫œ∑®
function BR_CheckMap()
	return 1;
end;
--ªÒµ√ƒ≥πÿ–≈œ¢
function BR_GetStageInfo(nDiff,nStage)
	local nRoute = GetMissionV(MV_ROUTE);
	if DEBUG_VERSION == 1 then
		if nStage == MAX_STAGE then
			return 180,1;
		else
			return 180,nDiff;
		end;
	end;
	if nStage == MAX_STAGE then	
		return TB_STAGE_INFO[nRoute][0][3][1],TB_STAGE_INFO[nRoute][0][3][2];	--◊‹ ±º‰£¨“™…±NPC ˝¡ø
	else
		return TB_STAGE_INFO[nRoute][nDiff][2][nStage],TB_STAGE_INFO[nRoute][nDiff][3][nStage];	--◊‹ ±º‰£¨“™…±NPC ˝¡ø
	end;
end;
--Ã·Ωª ±º‰µΩ ˝æ›ø‚
function BR_UpDateTimeRecord(nDiff,nTime,nPIdx)
	local nRoute = GetMissionV(MV_ROUTE);
	local nTaskID = TSK_BEST_RECORD_BEGIN+nDiff-1;
	local nBestRecord = GetTask(nTaskID,nPIdx);
	if nBestRecord == 0 then
		nBestRecord = nTime;
	end;
	SetMissionV(MV_TOTAL_TIME,0);
	if nTime <= nBestRecord then
		SetTask(nTaskID,nTime, 0, nPIdx);
		AddRelayShareData(BACKROOM_RELAY_KEY,nRoute,nDiff,"","",1,GetName(nPIdx),"d",nTime);
		return 1;
	else
		return 0;
	end;
end;
--≥ı ºªØπÿø®
function BR_InitStage(nDiff,nStage)
	local nCurTime = GetTime();
	SetMissionV(MV_BEGIN_TIME,nCurTime);	--ø™ ºº∆ ±
	SetMissionV(MV_NSC_KILL_NPC_COUNT,0);
	if nDiff == 8 or nDiff == 9 then --20080825 º”»Î8°¢9—≠ª∑≤ªƒ‹∏¸ªª◊∞±∏œﬁ÷∆
		BR_LockEquipment(1);
	end
	if nStage == MAX_STAGE then
		BR_CreateBoss(nDiff);
	else
		BR_CreateStageNpc(nDiff,nStage);	
	end;
	BR_ChangeMSState(MS_STATE_STARTED);
	local nTime,nNpcCount = BR_GetStageInfo(nDiff,nStage);
	local nLoop = BR_TransformTime2Loop(MS_STATE_STARTED,nTime);
	BR_SetStageTimerLoop(nLoop);
	BR_InitStageEven(nDiff,nStage);
	BR_StartTimeGuage("TÊng thÍi gian  ",nTime,0,0);
	SetMissionV(MV_NSC_NEED_KILL_NUMBER,nNpcCount);
	Msg2MSAll(MISSION_ID,"ThÍi hπn: "..tf_GetTimeString(nTime)..". SË thÒ v÷ c«n ph∂i Æ∏nh bπi Æ” qua cˆa: "..nNpcCount);
end;
--◊™ªªMissionµ±«∞◊¥Ã¨
function BR_ChangeMSState(nState)
	SetMissionV(MV_MISSION_STATE,nState);
	if nState == MS_STATE_IDEL then
		StopMissionTimer(MISSION_ID,TIMER_ID);	--Ω· ¯«∞“ª∏ˆº∆ ±∆˜
	elseif nState == MS_STATE_READY then
		SetMissionV(MV_TIMER_LOOP,READY_TIMER_COUNT);	--…Ë÷√º∆ ±∆˜◊‹º∆ ±¥Œ ˝
		StopMissionTimer(MISSION_ID,TIMER_ID);	--Ω· ¯«∞“ª∏ˆº∆ ±∆˜
		StartMissionTimer(MISSION_ID,TIMER_ID,READY_TIMER_INTERVAL*FRAME_PER_MIN);	--ø™ º“ª∏ˆº∆ ±∆˜	
	elseif nState == MS_STATE_STARTED then
		SetMissionV(MV_TIMER_LOOP,STARTED_TIMER_COUNT);	--…Ë÷√ø™ º◊¥Ã¨µƒ≥÷–¯ ±º‰
		StopMissionTimer(MISSION_ID,TIMER_ID);	--Ω· ¯«∞“ª∏ˆº∆ ±∆˜
		StartMissionTimer(MISSION_ID,TIMER_ID,STARTED_TIMER_INTERVAL*FRAME_PER_MIN);	--ø™ º“ª∏ˆ–¬µƒº∆ ±∆˜
	elseif nState == MS_STATE_SHORT_PAUSE then
		SetMissionV(MV_TIMER_LOOP,SHORT_PAUSE_TIMER_COUNT);	--…Ë÷√ø™ º◊¥Ã¨µƒ≥÷–¯ ±º‰
		StopMissionTimer(MISSION_ID,TIMER_ID);	--Ω· ¯«∞“ª∏ˆº∆ ±∆˜
		StartMissionTimer(MISSION_ID,TIMER_ID,SHORT_PAUSE_TIMER_INTERVAL*FRAME_PER_MIN);	--ø™ º“ª∏ˆ–¬µƒº∆ ±∆˜
	elseif nState == MS_STATE_END_WAITING then
		SetMissionV(MV_TIMER_LOOP,ENDING_TIMER_COUNT);
		StopMissionTimer(MISSION_ID,TIMER_ID);
		StartMissionTimer(MISSION_ID,TIMER_ID,ENDING_TIMER_INTERVAL*FRAME_PER_MIN);
	end;
end;
--ª÷∏¥ÕÊº“◊¥Ã¨
function BR_RestorePlayer()
	local nOldPIdx = PlayerIndex;
	PlayerIndex = GetMissionV(MV_PLAYERINDEX);
	Restore();
	RestoreNeili();
	ClearColdDown();	--«Â≥˝À˘”–“©CD
	CastState("imme_clear_skill_interval",-1,0);	--œ˚≥˝À˘”–ººƒ‹µƒ¿‰»¥ ±º‰
	PlayerIndex = nOldPIdx;
end;
--¥¥Ω®±¶œ‰
function BR_CreateAwardBox(nDiff,nStage,nPIdx)
	local nFaction = GetMissionV(MV_FACTION);
	local nOldPIdx = PlayerIndex;
	PlayerIndex = nPIdx or PlayerIndex;
	local nMapID,nMapX,nMapY = GetWorldPos();
	local nNpcIdx = CreateNpc("R≠¨ng ti“n",""..TB_DIFF_NAME[nDiff].."ßÈ kh„ ∂i "..nStage.."ß„ng b∂o r≠¨ng",nMapID,nMapX,nMapY);
	gf_SetUnitCurState(nNpcIdx,1,nDiff);
	gf_SetUnitCurState(nNpcIdx,2,nStage);
	gf_SetUnitCurState(nNpcIdx,3,0);	--…Ë÷√Œ™Œ¥ ∞»°
	SetNpcScript(nNpcIdx,"\\script\\task\\faction_back_room\\npc_box.lua");
	PlayerIndex = nOldPIdx;
end;
--≥ı ºªØπÿø®…Ë÷√°£Õ≥“ª»Îø⁄∫Ø ˝
function BR_InitStageEven(nDiff,nStage)
	local nRoute = GetMissionV(MV_ROUTE);
	if TB_INIT_STAGE_FUN[nRoute] ~= nil then
		TB_INIT_STAGE_FUN[nRoute](nDiff,nStage);
	end;
end;
--÷¥––πÿø® ¬º˛°£Õ≥“ª»Îø⁄∫Ø ˝
function BR_ProcStageEven(nDiff,nStage)
	local nRoute = GetMissionV(MV_ROUTE);
	if TB_PROC_STAGE_EVEN_FUN[nRoute] ~= nil then
		TB_PROC_STAGE_EVEN_FUN[nRoute](nDiff,nStage);
	end;
end;
--∑¥≥ı ºªØπÿø®…Ë÷√°£Õ≥“ª»Îø⁄∫Ø ˝
function BR_UnInitStageEven(nDiff,nStage)
	local nRoute = GetMissionV(MV_ROUTE);
	if TB_UNINIT_STAGE_FUN[nRoute] ~= nil then
		TB_UNINIT_STAGE_FUN[nRoute](nDiff,nStage);
	end;
	BR_CastPlayerState("");
	BR_ClearNSCValue();
	local nMapID = BR_GetCurMapID();
	BR_ClearMapNpcSafe(nMapID);
	BR_StopTimeGuage(-2);
	if DEBUG_VERSION == 1 then
		BR_CreateDisciple();
	end;
end;
--ºÏ≤ÈMS_STATE_STARTEDΩ◊∂Œº∆ ±∆˜µ±«∞Œª÷√
--≤Œ ˝1±Ì æ ±º‰£¨≤Œ ˝2Œ™0 ±±Ì æ≈–∂œµ±«∞º∆ ±∆˜ «∑Ò‘⁄≤Œ ˝1À˘ÃÓµƒ ±º‰µ„…œ
--≤Œ ˝2Œ™1 ±±Ì æµ±«∞º∆ ±∆˜ «∑Ò‘⁄“‘≤Œ ˝1Œ™º‰∏Ùµƒ ±º‰µ„…œ£¨≤Œ ˝2ƒ¨»œ÷µŒ™1
--»Á ‰»Î≤Œ ˝Œ™10,0 ±£¨‘Ú‘⁄º∆ ±∆˜ ±º‰Œ™10√Î ±∫Ø ˝∑µªÿ1,∆‰À¸ ±º‰∑µªÿ0£ª
--»Á ‰»Î≤Œ ˝Œ™10,1 ±£¨‘Úº∆ ±∆˜ ±º‰Œ™10,20,30,40...... ±∑µªÿ1,∆‰À¸ ±º‰∑µªÿ0
--»Áπ˚≤Œ ˝1µƒ ˝÷µ≤ª «º∆ ±∆˜ ±º‰º‰∏Ùµƒ’˚ ˝±∂£¨‘ÚœÚœ¬∂‘∆Î
function BR_CheckTimerPosition(nStartTime,nTime,bInterval)
	bInterval = bInterval or 1;
	local nLoop = floor(nTime/(STARTED_TIMER_INTERVAL*60));
	local nStartLoop = floor(nStartTime/(STARTED_TIMER_INTERVAL*60));
	local nCurLoop = BR_GetStageTimerLoop();
	local nDiff = BR_GetCurDiff();
	local nStage = BR_GetCurStage();
	local nTime = BR_GetStageInfo(nDiff,nStage);
	local nTotalLoop = BR_TransformTime2Loop(MS_STATE_STARTED,nTime);
	if nTotalLoop - nCurLoop < nStartLoop then
		return 0;
	end;
	nCurLoop = nCurLoop + nStartLoop;
	if bInterval == 1 then
		if mod(nTotalLoop - nCurLoop + 1,nLoop) == 0 then
			return 1;
		else
			return 0;
		end;
	else
		if nTotalLoop - nCurLoop + 1 == nLoop then
			return 1;
		else
			return 0;
		end;
	end;
end;
--∏¯ÕÊº“º”◊¥Ã¨£¨»Áπ˚≤Œ ˝£±Œ™""‘Ú“∆≥˝ÕÊº“…Ì…œÀ˘”–¡Ÿ ±◊¥Ã¨
function BR_CastPlayerState(szState,nValue,nTime,bForceInstead,nID)
	local nOldPIdx = PlayerIndex
	nValue = nValue or 0;
	nTime = nTime or -1;
	bForceInstead = bForceInstead or 1;
	nID = nID or 0;
	PlayerIndex = GetMissionV(MV_PLAYERINDEX);
	if szState == "" then
		gf_RemoveTempState();
	else
		CastState(szState,nValue,nTime*18,bForceInstead,TEMP_STATE_BEGIN+nID);
	end;
	PlayerIndex = nOldPIdx;
end;
--ªÒµ√µ±«∞µÿÕºID
function BR_GetCurMapID()
	return SubWorldIdx2ID(SubWorld);
end;
--ªÒµ√≥°µÿµƒMSUID
function BR_GetMSUID()
	return GetMissionV(MV_MISSION_UID);
end;
--«Â≥˝”√¿¥º«¬ºNPCÀ˜“˝µƒMission±‰¡ø
function BR_ClearNpcIndex()
	for i=MV_NPC_INDEX_BEGING,MV_NPC_INDEX_END do
		SetMissionV(i,0);
	end;
end;
--”√¿¥«Â≥˝NSC(New-Stage-Clear)±‰¡ø,∞¸¿®º«NPCÀ˜“˝µƒ±‰¡ø
function BR_ClearNSCValue()
	for i=MV_NSC_BEGIN,MV_NSC_END do
		SetMissionV(i,0);
	end;
	BR_ClearNpcIndex();
end;
--“∆≥˝“ª∏ˆNPCÀ˜“˝
function BR_RemoveNpcIndex(nNpcIdx)
	nNpcIdx = tonumber(nNpcIdx);
	for i=MV_NPC_INDEX_BEGING,MV_NPC_INDEX_END do
		if GetMissionV(i) == nNpcIdx then
			SetMissionV(i,0);
			return 1;
		end;
	end;
	gf_ShowDebugInfor("BR_RemoveNpcIndex nhÀn nNpcIdx kh´ng Î bi’n l≠Óng k˚ lÙc trong Mission");
	WriteLog(LOG_ERR_HEADER.."BR_RemoveNpcIndex nhÀn nNpcIdx kh´ng Î bi’n l≠Óng k˚ lÙc trong Mission");
	return 0;
end;
--ªÒµ√“ª∏ˆø…”√µƒMissionV±‰¡ø£¨’‚∏ˆ±‰¡ø”√¿¥º«¬ºNPCÀ˜“˝
function BR_GetNPCMissionV()
	for i=MV_NPC_INDEX_BEGING,MV_NPC_INDEX_END do
		if GetMissionV(i) == 0 then
			return i;
		end;
	end;
	return 0;
end;
--¥¥Ω®“ª◊ÈNPC£¨ÀÊª˙Œª÷√£¨ø…÷∏∂®’Û”™£¨ø……Ë÷√…˙¥Ê ±º‰
function BR_CreateFellow(szModelName,szNpcName,nCount,nCamp,tbPos,nLifeTime)
	local nNpcIdx = 0;
	local nMapID = BR_GetCurMapID();
	local nPosIdx = 0;
	local nPosSize = getn(tbPos);
	local tbTemp = gf_CopyTable(tbPos);	--∏¥÷∆“ª∏ˆ–¬µƒtable
	local tbNpcIdx = {};
	for i=1,nCount do
		nPosIdx = random(1,getn(tbTemp));
		nMapX = tbTemp[nPosIdx][1];
		nMapY = tbTemp[nPosIdx][2];
		nNpcIdx = BR_CreateNpc(szModelName,szNpcName,nMapID,nMapX,nMapY,nCamp);
		tinsert(tbNpcIdx,nNpcIdx);
		if nLifeTime ~= nil then
			SetNpcLifeTime(nNpcIdx,nLifeTime);
		end;
		tremove(tbTemp,nPosIdx);
	end;
	return tbNpcIdx;
end;
--±£¥ÊΩ¯∂»
function BR_SaveRecord(nDiff,nStage,nPIdx)
	local nOldPIdx = PlayerIndex;
	PlayerIndex = nPIdx or PlayerIndex
	if nDiff > MAX_DIFFICULTY_LEVEL then	--»Áπ˚ «◊Ó∫Û—≠ª∑◊Ó∫Ûπÿø®æÕ≤ª¥Êµµ¡À
		SetTask(TSK_WC_LAST_RECORD,0);	--Õ®»´πÿ∫Û«Âµµ
		SetTask(TSK_WC_FAIL_TIMES,GetTask(TSK_WC_FAIL_TIMES)+1);
		Msg2MSAll(MISSION_ID,"ß∑ xo∏ d˜ li÷u, Æ©y lµ l«n xo∏ th¯ "..GetTask(TSK_WC_FAIL_TIMES).." trong tu«n cÒa bπn ");
		return 0;
	end;
	local nRecord = nDiff*100+nStage;
	SetTask(TSK_WC_LAST_RECORD,nRecord);
	Msg2MSAll(MISSION_ID,"Ti’n ÆÈ Æ∑ l≠u: "..TB_DIFF_NAME[nDiff].."ßÈ kh„ ∂i "..nStage..".");
	PlayerIndex = nOldPIdx;
end;
--ªÒµ√Ω¯∂»±£¥Ê–≈œ¢
function BR_GetSaveRecord()
	local nRecord = GetTask(TSK_WC_LAST_RECORD);
	local nDiff = floor(nRecord/100);
	local nStage = mod(nRecord,100);
	return nDiff,nStage;
end;
--πÿ±’πÿø®
function BR_CloseStage()
	local nMapID = GetMissionV(MV_MAPID);
	local nMapIdx = GetMissionV(MV_MAPIDX);
	CloseMission(MISSION_ID);
	if UNCOMPLETED_VERSION ~= 1 then
		local nRetCode = FreeDynamicMap(nMapID,nMapIdx);	--FreeDynamicMap“≤ª·µ˜”√CloseMisssion
		if nRetCode ~= 0 then
			WriteLog(LOG_ERR_HEADER.."FreeDynamicMap ph∏t sinh lÁi, nRetCode:"..nRetCode);
		end;
	end;
end;
--–ﬁ∏ƒNPC—™¡ø£¨≤Œ ˝1£∫NPCÀ˜“˝£¨≤Œ ˝2£∫—™¡ø÷µ£¨≤Œ ˝3£∫‘ˆ¡ø÷µªπ «æ¯∂‘÷µ£®1Œ™‘ˆ£¨0Œ™æ¯£©£¨≤Œ ˝4£∫ «∑ÒŒ™∞Ÿ∑÷±»£¨1±Ì æ «£¨0±Ì æ≤ª «£®ƒ¨»œ «1£©
function BR_ModifyNpcLife(nNpcIdx,nValue,nFlag,bPercent)
	bPercent = bPercent or 1;
	if bPercent == 0 then	--»Áπ˚≤ª «∞Ÿ∑÷±»
		ModifyNpcData(nNpcIdx,0,nValue,nFlag);
		return 0;
	end;
	local nNpcMaxLife = GetUnitCurStates(nNpcIdx,1);	
	local nDamage = floor(nNpcMaxLife*nValue/100);	--∏˘æ›∞Ÿ∑÷±»¿¥º∆À„∏ƒ±‰µƒ—™¡ø
	ModifyNpcData(nNpcIdx,0,nDamage,nFlag);
end;
--ºÏ≤ÈµÿÕº «≤ª «’˝»∑µƒ
function BR_CheckMissionName()
	local nMSUID = BR_GetMSUID();
	if GetMissionS(MS_MISSION_NAME) == MISSION_NAME..nMSUID then
		return 1;
	else
		return 0;
	end;
end;
--∑‚◊∞µƒCreateNpc
function BR_CreateNpc(szModelName,szName,nMapID,nMapX,nMapY,nCamp)
	nCamp = nCamp or CAMP_ENEMY;	--ƒ¨»œŒ™µ–∂‘’Û”™
	local nNpcIdx = CreateNpc(szModelName,szName,nMapID,nMapX,nMapY);	
	SetCampToNpc(nNpcIdx,TB_CAMP_NAME[nCamp]);
	return nNpcIdx;
end;
--∞≤»´…æ≥˝µÿÕº…œµƒÀ˘”–NPC
function BR_ClearMapNpcSafe(nMapID)
	if BR_CheckMissionName() == 1 then
		ClearMapNpc(nMapID);
		return 1;
	else
		WriteLog(LOG_ERR_HEADER.."Hµm sË BR_ClearMapNpcSafe ph∏t sinh lÁi khi ki”m tra b∂n ÆÂ");
		return 0;
	end;
end;
--ø™∆Ù ±º‰Ω¯∂»Ãı
function BR_StartTimeGuage(szInfo,Duration,bRepeat,nCustomID)
	local nOldPIdx = PlayerIndex
	PlayerIndex = GetMissionV(MV_PLAYERINDEX);
	StartTimeGuage(szInfo,Duration,bRepeat,nCustomID);
	PlayerIndex = nOldPIdx;
end;
--Õ£÷π ±º‰Ω¯∂»Ãı
function BR_StopTimeGuage(nCustomID)
	local nOldPIdx = PlayerIndex
	PlayerIndex = GetMissionV(MV_PLAYERINDEX);
	StopTimeGuage(nCustomID);
	PlayerIndex = nOldPIdx;
end;

--ºÏ≤ÈµÿÕº «∑ÒŒ™∫œ∑®µƒø…Ω¯»Î√ÿ “µƒµÿÕº
function BR_CheckEntryMapID(nMapID)
	for i,v in TB_EXIT_POS do
		if i == nMapID then
			return 1;
		end;
	end;
	return 0;
end;
--ºÏ≤Èµ±«∞µÿÕº «≤ª «≥« –µÿÕº
function BR_CheckCityMapID()
	local nMapID = GetWorldPos();
	local tb = {100,150,200,300,350,400,500};	--∆ﬂ¥Û≥« –°£”¶∏√≤ªª·‘Ÿ‘ˆº”¡À∞…£ø
	for i=1,getn(tb) do
		if nMapID == tb[i] then
			return 1;
		end;
	end;
	return 0;
end;
--∞≤»´ø…øøµƒ¥´ÀÕ
function BR_SafeTransmission()
	for i,v in TB_EXIT_POS do
		if SubWorldID2Idx(i) ~= -1 then	--»Áπ˚’‚’≈µÿÕº‘⁄µ±«∞∑˛ŒÒ∆˜”–±ªº”‘ÿ
			NewWorld(i,TB_EXIT_POS[i][1],TB_EXIT_POS[i][2]);
		end;
	end;
end;
-- ∞»°±¶œ‰ªÒµ√Ω±¿¯
function BR_GetBoxAward(nDiff,nStage)
	local tbDropInfo = TB_DROP_INFO[nDiff][nStage];
	local nFaction = GetPlayerFaction();
	for i=1,getn(tbDropInfo) do
		local nCount = tbDropInfo[i];
		local nRand = 0;
		if nCount > 0 then
			if nCount >= 2 then	-- ˝÷µ¥Û”⁄µ»”⁄2µƒŒÔ∆∑µÙ¬‰”–30%º∏¬ µÙ¬‰ ˝¡øºı1£¨”–30%º∏¬ µÙ¬‰ ˝¡øº”1£¨¡Ì40%º∏¬ ≤ª±‰
				nRand = random(1,100);
				if nRand <= 30 then
					nCount = nCount - 1;
				elseif nRand <= 60 then
					nCount = nCount + 1;
				end;
			end;
			AddItem(TB_TOTEM_INFO[nFaction][i][1],TB_TOTEM_INFO[nFaction][i][2],TB_TOTEM_INFO[nFaction][i][3],nCount);
			Msg2Player("Bπn nhÀn Æ≠Óc "..nCount.."c∏i"..TB_TOTEM_INFO[nFaction][i][4]);
		end;
	end;
	local nExp = 0;
	local nGongXian = 0;
	if IB_VERSION == 1 then	--√‚∑—«¯
		nExp = 160000;
		nGongXian = 25;
	else	-- ’∑—«¯
		nExp = 250000;
		nGongXian = 40;	
	end;
	ModifyExp(nExp);
	Msg2Player("Bπn nhÀn Æ≠Óc "..nExp.." Æi”m kinh nghi÷m");
	local nCurGongXian = GetTask(336);
	if nCurGongXian > 12500 then
		Msg2Player("Hi÷n tπi Æi”m cËng hi’n s≠ m´n cÒa bπn Æ∑ v≠Ót qu∏ 12500 Æi”m, kh´ng th” nhÀn Æ≠Óc ph«n th≠Îng Æi”m cËng hi’n Î mÀt th t s≠ m´n n˜a");
	else
		SetTask(336,nCurGongXian+nGongXian);
		Msg2Player("Bπn nhÀn Æ≠Óc "..nGongXian.." Æi”m cËng hi’n S≠ M´n ");
	end;
	Msg2Player("Bπn Æ∑ nhÀn rÂi"..TB_DIFF_NAME[nDiff].."ßÈ kh„ ∂i "..nStage.."R≠¨ng cÒa ∂i");
	WriteLog(LOG_HEADER..GetName().." nhÀn ÆÈ kh„"..nDiff.."th¯"..nStage..".	");
end;
--Ω¯»Î√øπÿ«∞µƒºÏ≤‚
function BR_EnterNextStageCheck(nDiff,nStage,nPIdx)
	local nOldPIdx = PlayerIndex;
	PlayerIndex = nPIdx or PlayerIndex;
	if PlayerIndex == 0 then
		return 0;
	end;
	if BR_CheckLevel(nDiff,nStage) == 0 then
		PlayerIndex = nOldPIdx;
		return 0;
	end;
	if BR_CheckTitle(nDiff,nStage) == 1 then
		PlayerIndex = nOldPIdx;
		return 1;
	end;
	if BR_CheckEquipment(nDiff,nStage) == 1 then
		PlayerIndex = nOldPIdx;
		return 1;
	end;
	if BR_CheckRouteFeature(nDiff,nStage) == 1 then
		PlayerIndex = nOldPIdx;
		return 1;
	end;
	PlayerIndex = nOldPIdx;
	return 0;
end;
function BR_CheckLevel(nDiff,nStage)
	local nLevel = GetLevel();
	local tbLevelNeed = {50,50,50,50,50,70,70,85,85};
	if nLevel < tbLevelNeed[nDiff] then
		return 0;
	end;
end;
--ºÏ≤‚≥∆∫≈
function BR_CheckTitle(nDiff,nStage)
	local nTitleID1,nTitleID2 = GetCurTitle();
	if nDiff <= 5 then
		return 1;
	end;
	if nDiff == 8 or nDiff == 9 then  --8°¢9ƒ—∂»≤ª≈–∂œ
		return 0;
	end;
	local tbTitleNeed = 	--∂®“ÂÀ˘”–≥∆∫≈–≈œ¢
	{
		[1] = {{30,11},{30,5}},	--Ω´æ¸
		[2] = {{30,12},{30,6}},	--‘™Àß
		[3] = {{51,1},{51,2},{51,5},{51,6},{51,9},{51,10}},	--≥«÷˜
		[4] = {{51,3},{51,7},{51,11}},	--æ¸ ¶
		[5] = {{51,4},{51,8},{51,12}},	--√˚≤∂
		[6] = {{30,4},{30,10}},	--œ»∑Ê
		[7] = {{30,3},{30,9}},	--∂ºÕ≥
	}
	local tbCheck = 	--∂®“Â∏˜ƒ—∂»À˘“™ºÏ≤Èµƒ≥∆∫≈¿‡–Õ
	{
		[1] = nil,
		[2] = nil,
		[3] = nil,
		[4] = nil,
		[5] = nil,
		[6] = {1,2,3,4,5,6,7},
		[7] = {1,2,3,4,5,6,7},
		[8] = {1,2,3},
		[9] = {1,2,3},
	}
	local tbTitleInfo = tbCheck[nDiff];
	if tbTitleInfo == nil then
		return 1;
	end;
	local nTitleType = 0;
	for i=1,getn(tbTitleInfo) do
		nTitleType = tbTitleInfo[i];
		for j=1,getn(tbTitleNeed[nTitleType]) do
			if nTitleID1 == tbTitleNeed[nTitleType][j][1] and nTitleID2 == tbTitleNeed[nTitleType][j][2] then
				return 1;
			end;
		end;	
	end;
	return 0;
end;
--ºÏ≤‚◊∞±∏
function BR_CheckEquipment(nDiff,nStage)
	if nDiff <= 5 then
		return 1;
	end;
	if (BR_CheckYanDiEquip() == 1 or BR_CheckHuangDiEquip() == 1 or BR_CheckTDXHEquip() == 1) and nDiff ~= 8 and nDiff ~= 9 then --8°¢9πÿ÷ªƒ‹¥© ¶√≈µ⁄4Ã◊
		return 1;
	end;
	if nDiff == 6 or nDiff == 7 then
		if BR_CheckFactionEquip(3,2) == 1 or BR_CheckFactionEquip(4,2) == 1 or BR_CheckFactionEquip(5,3) == 1 then
			return 1;
		end;
	end;
	if nDiff == 8 or nDiff == 9 then
		if BR_CheckFactionEquip(4,6) == 1 then
			return 1;
		end;	
	end;
	return 0;
end;
--ºÏ≤È—◊µ€◊∞
function BR_CheckYanDiEquip()
	local nSuitID1 = GetEquipSuitID(GetPlayerEquipIndex(0));
	local nSuitID2 = GetEquipSuitID(GetPlayerEquipIndex(1));
	local nSuitID3 = GetEquipSuitID(GetPlayerEquipIndex(3));
	local nBody = GetBody();
	if (nSuitID1 == nSuitID2 and nSuitID1 == nSuitID3 and nSuitID1 == 80000+nBody) or (nSuitID1 == nSuitID2 and nSuitID1 == nSuitID3 and nSuitID1 == 80064+nBody) then
		return 1;
	else
		return 0;
	end;
end;
--ºÏ≤Èª∆µ€
function BR_CheckHuangDiEquip()
	local nRoute = GetPlayerRoute();
	local nSuitID1 = GetEquipSuitID(GetPlayerEquipIndex(2));
	local nSuitID2 = GetEquipSuitID(GetPlayerEquipIndex(4));
	local nSuitID3 = GetEquipSuitID(GetPlayerEquipIndex(5));
	local nCheckRetCode,nRoutePos = gf_CheckPlayerRoute();
	if nCheckRetCode ~= 1 then
		return 0;
	end;
	if nSuitID1 == nSuitID2 and nSuitID1 == nSuitID3 and nSuitID1 == 88000+nRoutePos then
		return 1;
	else
		return 0;
	end;
end;
--ºÏ≤ÈÃÏµÿ–˛ª∆
function BR_CheckTDXHEquip()
	local nEquipIdx1 = GetPlayerEquipIndex(0);	--Õ∑
	local nEquipIdx2 = GetPlayerEquipIndex(1);	--“¬
	local nEquipIdx3 = GetPlayerEquipIndex(2);	--Œ‰∆˜
	local nEquipIdx4 = GetPlayerEquipIndex(3);	--ø„◊”
	local nID1,nID2,nID3 = 0,0,0;
	local nBody = GetBody();
	local tbTDXHWeapon = 
	{
		{0,3,67},{0,8,100},{0,0,17},{0,1,56},{0,2,39},{0,10,78},{0,0,17},
		{0,5,43},{0,2,39},{0,9,89},{0,6,111},{0,4,122},{0,11,15},{0,7,15},
	}
	nID1,nID2,nID3 = GetItemInfoByIndex(nEquipIdx1);	--Õ∑
	if nID1 ~= 0 or nID2 ~= 103 or nID3 ~= 85+nBody-1 then
		return 0;
	end;
	nID1,nID2,nID3 = GetItemInfoByIndex(nEquipIdx2);--“¬
	if nID1 ~= 0 or nID2 ~= 100 or nID3 ~= 85+nBody-1 then
		return 0;
	end;
	nID1,nID2,nID3 = GetItemInfoByIndex(nEquipIdx3);--Œ‰∆˜
	local bWeaponCheck = 0;
	for i=1,getn(tbTDXHWeapon) do
		if nID1 == tbTDXHWeapon[i][1] and nID2 == tbTDXHWeapon[i][2] and nID3 == tbTDXHWeapon[i][3] then
			bWeaponCheck = 1;
		end;
	end;
	if bWeaponCheck == 0 then
		return 0;
	end;
	nID1,nID2,nID3 = GetItemInfoByIndex(nEquipIdx4);--ø„◊”
	if nID1 ~= 0 or nID2 ~= 101 or nID3 ~= 85+nBody-1 then
		return 0;
	end;
	return 1;
end;
--ºÏ≤È ¶√≈◊∞±∏,≤Œ ˝nGen±Ì æµ⁄º∏Ã◊£¨nNum «◊ÓµÕºÏ≤Èº˛ ˝
function BR_CheckFactionEquip(nGen,nNum)
	local nRoute = GetPlayerRoute();
	local nBody = GetBody();
	local nFaction = GetPlayerFaction();
	local nSuitID = nRoute*1000+(nGen-1)*10+nBody;
	if nFaction == 3 then	--»Áπ˚ «∂Î·“
		nSuitID = nSuitID - 2;
	end;
	local nCheckNum = 0;
	local nEquipIdx = 0;
	for i=1,6 do	--ºÏ≤ÈÕ∑“¬ø„Œ‰∆˜ ◊ Œ1 ◊ Œ2
		nEquipIdx = GetPlayerEquipIndex(i-1);
		if GetEquipSuitID(nEquipIdx) == nSuitID then
			nCheckNum = nCheckNum + 1;
		end;
	end;
	if nCheckNum >= nNum then
		return 1;
	else
		return 0;
	end;
end;
--ºÏ≤È¡˜≈…Ãÿ…´
function BR_CheckRouteFeature(nDiff,nStage)
	if gf_CheckPlayerRoute() == 0 then
		return 0;
	end;
	local nRoute = GetPlayerRoute();
	if nDiff <= 5 then
		return 1;
	end;
	if nDiff == 8 or nDiff == 9 then  --8°¢9ƒ—∂»≤ª≈–∂œ
		return 0;
	end;	
	local nLL = GetAllStrength() - GetStrength();		--¡¶¡ø1
	local nSF = GetAllDexterity() - GetDexterity();		--…Ì∑®2
	local nNG = GetAllEnergy() - GetEnergy();			--ƒ⁄π¶3
	local nDC = GetAllObserve() - GetObserve();			--∂¥≤Ï4
	local nGG = GetAllVitality() - GetVitality();		--∏˘π«5
	local tbPro = {nLL,nSF,nNG,nDC,nGG};
	local tbRouteFeature = 
	{	--{{ Ù–‘1, Ù–‘2},{45—≠ª∑œﬁ÷∆ ˝÷µ,67—≠ª∑œﬁ÷∆ ˝÷µ,89—≠ª∑œﬁ÷∆ ˝÷µ}}
		 [0] = {},
		 [1] = {},	
		 [2] = {{{1,5},{225,275,400}}},	--…Ÿ¡÷À◊º“
		 [3] = {{{3,5},{210,255,380}}},	--…Ÿ¡÷Ï¯…Æ
		 [4] = {{{3,5},{200,245,370}}},	--…Ÿ¡÷Œ‰…Æ
		 [5] = {},			--Ã∆√≈
		 [6] = {{{1,2},{180,225,350}},{{2,3},{160,215,340}}},	--Ã∆√≈
		 [7] = {},			--∂Î·“
		 [8] = {{{3,5},{200,245,370}}},	--∂Î·“∑º“
		 [9] = {{{2,3},{165,215,340}},{{3,5},{185,230,350}}},	--∂Î·“À◊º“
		[10] = {},			--ÿ§∞Ô
		[11] = {{{1,5},{220,265,390}}},--ÿ§∞Ôæª“¬
		[12] = {{{2,4},{110,155,280}},{{1,2},{160,205,330}}},--ÿ§∞ÔŒ€“¬
		[13] = {},			--Œ‰µ±
		[14] = {{{3,4},{170,215,340}},{{2,3},{150,195,320}}},--Œ‰µ±µ¿º“
		[15] = {{{2,4},{110,155,280}},{{1,4},{160,205,330}}},--Œ‰µ±À◊º“
		[16] = {},			--—Ó√≈
		[17] = {{{1,5},{220,265,390}}},--—Ó√≈«π∆Ô
		[18] = {{{1,2},{180,225,370}}},--—Ó√≈π≠∆Ô
		[19] = {},			--ŒÂ∂æ
		[20] = {{{1,2},{180,225,370}}},--ŒÂ∂æ–∞œ¿
		[21] = {{{3,4},{160,205,330}},{{4,5},{150,195,320}}},--ŒÂ∂æπ∆ ¶
	}
	local nIndex = 0;
	if nDiff == 4 or nDiff == 5 then
		nIndex = 1;
	elseif nDiff == 6 or nDiff == 7 then	--080505–ﬁ∏ƒ£∫67ƒ—∂»∏ƒŒ™”Î45ƒ—∂»“ª—˘
		nIndex = 1;
	elseif nDiff == 8 or nDiff == 9 then
		nIndex = 3;
	end;
	local tbInfo = {};
	for i=1,getn(tbRouteFeature[nRoute]) do
		tbInfo = tbRouteFeature[nRoute][i];
		if tbPro[tbInfo[1][1]]+tbPro[tbInfo[1][2]] >= tbInfo[2][nIndex] then
			return 1;
		end;
	end;
	return 0; 
end;
--∏¯NPC≤•∑≈Ãÿ–ß
function BR_SetCurrentNpcSFX(nNpcIdx,nEffectID,nPos,bRepeat)
	nPos = nPos or 2;	--ƒ¨»œ‘⁄Õ∑≤ø≤•
	bRepeat = bRepeat or 0;	--ƒ¨»œ≤ª—≠ª∑
	if IsNpcDeath(nNpcIdx) == 0 then	--»Áπ˚NPCªπªÓ◊≈æÕ≤•∑≈Ãÿ–ß
		SetCurrentNpcSFX(nNpcIdx,nEffectID,nPos,bRepeat);
	end;
end;
--∏¯ÕÊº“≤•∑≈Ãÿ–ß
function BR_SetCurrentPlayerSFX(nEffectID,nPos,bRepeat)
	local nPIdx = GetMissionV(MV_PLAYERINDEX);
	if nPIdx == 0 then
		return 0;
	end;
	local nOldPIdx = PlayerIndex;
	PlayerIndex = nPIdx;
	local nNpcIdx = PIdx2NpcIdx(nPIdx);	--¥À÷∏¡Ó“™‘⁄PlayerIndex”––ßµƒ«Èøˆœ¬≤≈ƒ‹∆◊˜”√
	BR_SetCurrentNpcSFX(nNpcIdx,nEffectID,nPos,bRepeat);
	PlayerIndex = nOldPIdx;
	return 1;
end;
--À¯∂®”ÎΩ‚À¯◊∞±∏
function BR_LockEquipment(bLock)
	local tbEquipPos = {0,1,2,3,4,5};
	for i=1,getn(tbEquipPos) do
		ForbidEquipSolt(tbEquipPos[i],bLock);
	end;
end;
--===================================================================================
function BR_KnowLimit()
	local selTab = {
			". 6, 7 tu«n hoµn (Æ’n c p 70)/backroom_know_limit_2",
			". 8, 9 tu«n hoµn (Æ’n c p 85)/backroom_know_limit_3",
			"* Quay lπi/main",
			". K’t thÛc ÆËi thoπi/nothing",
			}
	Say(g_szInforHeader.."1, 2, 3, 4, 5 tu«n hoµn, Æ’n c p 50 c„ th” tham gia.",getn(selTab),selTab);
end;

function backroom_know_limit_2()
	Talk(2,"backroom_know_limit_2_1","Ph∂i ÆÒ t≠ c∏ch 1 trong nh˜ng Æi“u ki÷n b™n d≠Ìi: \nDanh hi÷u: mÈt trong b t k˙ danh hi÷u t≠Ìng qu©n, nguy™n so∏i, ti™n phong, Æ´ thËng, thµnh chÒ qu©n s≠, danh bÈ\nTrang bﬁ: mÈt trong b t k˙ ÆÒ bÈ vi™m Æ’,  thien chi vi™m Æ’, hoµng Æ’, thi™n Æﬁa huy“n hoµng, 2 m„n s≠ m´n bÈ 3 trÎ l™n, 2 m„n s≠ m´n bÈ 4 trÎ l™n\n    Thi’u L©m tÙc gia: trang bﬁ, trπng th∏i cÔng vÌi h÷ ph∏i c„ t t c∂ c∏c trﬁ sË s¯c mπnh g©n cËt cÈng lπi h¨n 225\n    Thi’u L©m v‚ t®ng:  trang bﬁ, trπng th∏i cÔng  c∏c thuÈc t›nh tÊng nÈi c´ng vµ g©n cËt cÈng lπi ph∂i h¨n 200 Æi”m","    Thi’u L©m thi“n t®ng: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng g©n cËt, nÈi c´ng tÊng cÈng h¨n 210 Æi”m\n    ß≠Íng M´n: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng th©n ph∏p, s¯c mπnh tÊng cÈng h¨n 180 Æi”m ho∆c t®ng th©n ph∏p, nÈi c´ng tÊng cÈng h¨n 160 Æi”m\n    Nga My phÀt gia: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng g©n cËt, nÈi c´ng tÊng cÈng h¨n 200 Æi”m\n    Nga My tÙc gia: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng th©n ph∏p, nÈi c´ng tÊng cÈng h¨n 165 Æi”m ho∆c t®ng g©n cËt, nÈi c´ng tÊng cÈng h¨n 185 Æi”m");

end;

function backroom_know_limit_2_1()
	Talk(2,"BR_KnowLimit","    C∏i Bang tﬁnh y: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng g©n cËt, s¯c mπnh tÊng cÈng h¨n 220 Æi”m\n    C∏i Bang ´ y: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng th©n ph∏p, nhanh nh—n tÊng cÈng h¨n 110 Æi”m ho∆c t®ng th©n ph∏p, s¯c mπnh tÊng cÈng h¨n 160 Æi”m\n    V‚ ßang Æπo gia: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng nÈi c´ng, nhanh nh—n tÊng cÈng h¨n 170 Æi”m ho∆c t®ng nÈi c´ng, th©n ph∏p tÊng cÈng h¨n 150 Æi”m\n    V‚ ßang tÙc gia: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng nhanh nh—n, th©n ph∏p tÊng cÈng h¨n 110 Æi”m ho∆c t®ng nhanh nh—n, s¯c mπnh tÊng cÈng h¨n 160 Æi”m","    D≠¨ng M´n th≠¨ng k˛: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng s¯c mπnh, g©n cËt tÊng cÈng h¨n 220 Æi”m\n    D≠¨ng M´n cung k˛: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng th©n ph∏p, s¯c mπnh tÊng cÈng h¨n 180 Æi”m\n    NgÚ ßÈc tµ hi÷p: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng th©n ph∏p, s¯c mπnh tÊng cÈng h¨n 180 Æi”m\n    NgÚ ßÈc cÊ s≠: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng nhanh nh—n, nÈi c´ng tÊng cÈng h¨n 160 Æi”m ho∆c nhanh nh—n, g©n cËt tÊng cÈng h¨n 150 Æi”m");
end;

function backroom_know_limit_3()
--	Talk(2,"backroom_know_limit_3_1","“‘œ¬À˘”–Ãıº˛¬˙◊„»Œ∫Œ“ª÷÷º¥ø…£∫\n≥∆∫≈£∫œ÷≥ˆΩ´æ¸£¨‘™Àß£¨∂ºÕ≥£¨œ»∑Ê£¨≥«÷˜£¨æ¸ ¶£¨√˚≤∂»Œ∫Œ“ª÷÷\n◊∞±∏£∫¥©¥˜—◊µ€»´Ã◊£¨ª∆µ€»´Ã◊£¨ÃÏµÿ–˛ª∆»´Ã◊£¨ ¶√≈µ⁄3Ã◊4º˛º´∆‰“‘…œ£¨ ¶√≈µ⁄4Ã◊4º˛º´∆‰“‘…œ»Œ∫Œ“ª÷÷\n    …Ÿ¡÷À◊º“£∫◊∞±∏,◊¥Ã¨“‘º∞¡˜≈…∂ÓÕ‚ Ù–‘º”≥…À˘º”µƒ¡¶¡ø∏˘π«◊‹÷µ¥Û”⁄400µ„","    …Ÿ¡÷Œ‰…Æ£∫◊∞±∏£¨◊¥Ã¨“‘º∞¡˜≈…∂ÓÕ‚ Ù–‘º”≥…µƒƒ⁄π¶∏˘π«◊‹÷µ¥Û”⁄370µ„\n    …Ÿ¡÷Ï¯…Æ£∫◊∞±∏£¨◊¥Ã¨“‘º∞¡˜≈…∂ÓÕ‚ Ù–‘º”≥…µƒƒ⁄π¶∏˘π«◊‹÷µ¥Û”⁄380µ„\n    Ã∆√≈£∫◊∞±∏£¨◊¥Ã¨“‘º∞¡˜≈…∂ÓÕ‚ Ù–‘º”≥…µƒ…Ì∑®¡¶¡ø◊‹÷µ¥Û”⁄350µ„ªÚ’ﬂ…Ì∑®ƒ⁄π¶◊‹÷µ¥Û”⁄340µ„\n    ∂Î·“∑º“£∫◊∞±∏£¨◊¥Ã¨“‘º∞¡˜≈…∂ÓÕ‚ Ù–‘º”≥…µƒƒ⁄π¶∏˘π«◊‹÷µ¥Û”⁄370µ„\n    ∂Î·“À◊º“£∫◊∞±∏£¨◊¥Ã¨“‘º∞¡˜≈…∂ÓÕ‚ Ù–‘º”≥…µƒƒ⁄π¶…Ì∑®◊‹÷µ¥Û”⁄340µ„ªÚ’ﬂƒ⁄π¶∏˘π«◊‹÷µ¥Û”⁄350µ„");
	Talk(1,"BR_KnowLimit","8, 9 tu«n hoµn, chÿ c„ th” m∆c bÈ trang bﬁ s≠ m´n 4, trong qu∏ tr◊nh v≠Ót ∂i kh´ng Æ≠Óc thay ÆÊi trang bﬁ.")
end;

function backroom_know_limit_3_1()
	Talk(2,"BR_KnowLimit","    C∏i Bang tﬁnh y: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng s¯c mπnh, g©n cËt tÊng cÈng h¨n 390 Æi”m\n    C∏i Bang ´ y: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng th©n ph∏p, nhanh nh—n tÊng cÈng h¨n 280 Æi”m ho∆c t®ng th©n ph∏p, s¯c mπnh tÊng cÈng h¨n 330 Æi”m\n    V‚ ßang Æπo gia: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng nÈi c´ng, nhanh nh—n tÊng cÈng h¨n 340 Æi”m ho∆c nÈi c´ng, th©n ph∏p tÊng cÈng h¨n 320 Æi”m\n    V‚ ßang tÙc gia: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng nhanh nh—n, th©n ph∏p tÊng cÈng h¨n 280 Æi”m ho∆c t®ng nhanh nh—n, s¯c mπnh tÊng cÈng h¨n 330 Æi”m","    D≠¨ng M´n th≠¨ng k˛: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng s¯c mπnh, g©n cËt tÊng cÈng h¨n 390 Æi”m\n    D≠¨ng M´n cung k˛: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng th©n ph∏p, s¯c mπnh tÊng cÈng h¨n 370 Æi”m\n    NgÚ ßÈc tµ hi÷p: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng th©n ph∏p, s¯c mπnh tÊng cÈng h¨n 370 Æi”m\n    NgÚ ßÈc cÊ s≠: trang bﬁ, trπng th∏i, thuÈc t›nh l≠u ph∏i t®ng nhanh nh—n, nÈi c´ng tÊng cÈng h¨n 330 Æi”m ho∆c t®ng nhanh nh—n, g©n cËt tÊng cÈng h¨n 320 Æi”m");
end;

function nothing()

end;