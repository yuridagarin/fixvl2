Include("\\script\\lib\\globalfunctions.lua")
Include("\\script\\lib\\string.lua");
Include("\\script\\½á»é\\mission\\mission_head.lua");
Include("\\script\\global\\mate_head.lua");
DEBUG_VERSION = 0;	--ÊÇ·ñµ÷ÊÔ°æ±¾

GLB_CLOSE_MARRIAGE = 153;	--¹Ø±ÕÃ½ÆÅºÍÔÂÀÏ
GLB_CLOSE_FIELD	= 154;		--¹Ø±Õ´«ËÍÈËºÍ½á»é³¡µØ

SetGlbValue(GLB_CLOSE_MARRIAGE,0);	--ÈçĞè¹Ø±ÕÃ½ÆÅºÍÔÂÀÏ£¬ÕâÀïÉèÖÃÎª1
SetGlbValue(GLB_CLOSE_FIELD,0);	--ÈçĞè¹Ø±Õ³¡µØºÍ´«ËÍÈË£¬ÕâÀïÉèÖÃÎª1

MARRIAGE_CHANNEL = "Khu vùc kÕt h«n"

KEY_WEDDING				= "WEDDING_FIELD"	-- ¹²ÏíÊı¾İ¼ÇÂ¼µÄÖ÷¼ü

ITEM_COIN				= {2,1,549}		-- Àñ½ğ
ITEM_INVITATION			= {2,1,506}		-- ÇëÌû
ITEM_DOOLY				= {0,105,32}	-- ½Î×Ó
ITEM_LIHUA				= {2,1,546}		-- Àñ»¨
ITEM_XITANG				= {2,1,507}		-- Ï²ÌÇ
ITEM_MTCXB				= {2,1,548}		-- ÂşÌì²ÊĞ¼°ü
ITEM_QINGTIE_PACKET		= {2,1,547}		-- ÇëÌù°ü
ITEM_NOTEBOOK 			= {2,1,550}		-- ³¡µØËµÃ÷ÊÖ¾í
ITEM_JINGBIAOBOOK		= {2,1,540}		-- ³¡µØ¾º±êÊÖ¾í
ITEM_HONGBAO = {
			[1] = {2,1,539,"§¹i hång bao hoµng kim"},
			[2] = {2,1,537,"§¹i hång bao tö kim"},
			[3] = {2,1,508,"Hång bao"},
			}
			
ITEM_MARRIAGE_PACKET = {
			[1] = {2,1,541,"VÜnh KÕt §ång T©m bao"},
			[2] = {2,1,542,"CÊm S¾t Hßa Minh bao"},
			[3] = {2,1,543,"Chu Liªn Bİch Hîp bao"},
			[4] = {2,1,544,"V¨n §Şnh C¸t T­êng bao"},
			}
--=====================================================================================================
TASK_WEDDING_COST		= 2000				-- ÈÎÎñ±äÁ¿£º»éÀñÍ¶±ê¼Û¸ñ
TASK_WEDDING_DATE		= 2001				-- ÈÎÎñ±äÁ¿£º»éÀñÍ¶±êÈÕÆÚ
TASK_WEDDING_FIELD		= 2002				-- ÈÎÎñ±äÁ¿£º»éÀñÍ¶±êÊ±¶ÎºÍ³¡µØ
TASK_WEDDING 			= 2003				-- ÈÎÎñ±äÁ¿£º»éÀñ²½Öè + »éÀñ×´Ì¬ * 1000
TASK_WEDDING_LOVER		= 2004				-- ÈÎÎñ±äÁ¿£ºÁµÈËÃû×ÖµÄ±àÂë
TASK_EAT_XITANG_COUNT	= 2005				-- µ±ÈÕ³ÔÏ²ÌÇÊıÁ¿
TASK_EAT_XITANG_DATE	= 2006				-- ³ÔÏ²ÌÇµÄÈÕÆÚ
TASK_TAKE_FOOD_TIME		= 2007				-- ÉÏ´ÎÈ¡×ßÊ³ÎïµÄÊ±¼ä
TASK_KOTOW				= 2008				-- ÊÇ·ñÔÚ½á»é³¡µØ×ö¹ı°İµÄ¶¯×÷
TASK_GOT_INVITATION		= 2009				-- ÊÇ·ñÁìÈ¡ÁËÇëÌù

TASK_FACTION_OUT		= 2011				-- ÈÎÎñ±äÁ¿£ºÊÇ·ñ³öÊ¦
TASK_SEPERATION_DATE	= 2018				-- ÈÎÎñ±äÁ¿£º·Ö¾ÓÈÕÆÚ£¨Äê·İ * 600 + ÔÂ·İ * 40 + ÈÕÆÚ£©
TASK_MARRIAGE_HINT		= 2019				-- ÈÎÎñ±äÁ¿£º½á»é²½ÖèÌáÊ¾

TASK_WEDDING1_ID		= 2024				-- ¼ÇÂ¼Íæ¼Ò½øÈëµÄ£±ºÅ³¡µØ»éÀñID
TASK_WEDDING2_ID		= 2025				-- ¼ÇÂ¼Íæ¼Ò½øÈëµÄ£²ºÅ³¡µØ»éÀñID
TASK_WEDDING3_ID		= 2026				-- ¼ÇÂ¼Íæ¼Ò½øÈëµÄ£³ºÅ³¡µØ»éÀñID
TASK_WEDDING4_ID		= 2027				-- ¼ÇÂ¼Íæ¼Ò½øÈëµÄ£´ºÅ³¡µØ»éÀñID

TASK_BUY_RING			= 2028				-- ¼ÇÂ¼Âò½äÖ¸µÄÇé¿ö¡£¸öÎ»±íÊ¾ÊÇ·ñÂòÁËÄĞ½ä£¬Ê®Î»±íÊ¾ÊÇ·ñÂòÁËÅ®½ä

INTERVAL_SEPERATION		= 7					-- ·Ö¾ÓµÄÌìÊı

--Ä³ÌìÄ³Ê±¶ÎÄ³³¡µØµÄÔ¤¶©×´Ì¬½á¹¹µÄÏî
ITEMKEY_STAT			= "stat"			-- Ô¤¶©×´Ì¬
ITEMKEY_ROLE			= "role"			-- Ô¤¶©ÈË
ITEMKEY_WIFE			= "wife"			-- ÅäÅ¼
ITEMKEY_COST			= "cost"			-- Ô¤¶©½ğ¶î
ITEMKEY_CLOSEDATE		= "close_date"		-- ½ØÖÁÈÕÆÚ
ITEMKEY_CLOSETIME		= "close_time"		-- ½ØÖÁÊ±¼ä

-- ²»Í¬ÀàĞÍ»éÀñ³¡µØ¶ÔÓ¦µÄµØÍ¼ID, TODO: here
map_field2type = {
	[851] = 1,	--ëÙÖ¬Ğ¡Öş
	[852] = 2,	--ÌìÑÄº£½Ç
	[853] = 3,	--¶´·¿»¨Öò
	[854] = 4,	--ÔÆÉ½Ö®áÛ
}

field_lihua_limit = {10,20,30,50}	--³¡µØÄÚÀñ»¨ÊıÁ¿ÏŞÖÆ

-- »éÀñÔ¤¶©Ê±¶Î
map_period = {
	{12,0,13,30,"12:00-13:30","12:30-13:30"},	
	{18,0,19,30,"18:00-19:30","18:30-19:30"},
	{21,0,22,30,"21:00-22:30","21:30-22:30"},
}

map_RevPos	= {
	{851,1521,3181},
	{852,1602,3167},
	{853,1506,3175},
	{854,1609,3222},
	}

-- ³¡µØÀàĞÍ
map_fieldinfo = {
	-- Ãû³Æ			Æğ±ê¼Û	Âò¶Ï¼Û	¸½ÇëÌûÊı  ×î´óÈËÊı   ¼Ó¼Û
	{"YÕt chi tiÓu tróc",	20,		250,	3,			50,        10},
	{"C« ®¶o",	40,		500,	5,			100,       20},
	{"§éng phßng hoa chóc",	200,	2500,	5,			100,       100},
	{"V©n S¬n ®Ønh",	800,	10000,	8,			100,       400}
}

-- ³¡µØ×ø±ê
map_fieldpos 	= {		-- »éÀñ³¡µØµØÍ¼IDºÍ×ø±ê
	{851, 1543, 3220},
	{852, 1603, 3276},
	{853, 1544, 3213},
	{854, 1603, 3326},
}

map_leavefieldpos = {
	{150, 1711, 3051},
	{150, 1711, 3051},
	{150, 1711, 3051},
	{150, 1711, 3051},
}
--Ê³Îï
tFoods = 
{
	[1] = {1,1,2," C¬m n¾m"},
	[2] = {1,1,3," Mµn thÇu"},
	[3] = {1,1,4," B¸nh xÕp"},
	[4] = {1,1,5," B¸nh bao thŞt"},
	[5] = {1,1,6,"§Üa m¨ng xµo"},
	[6] = {1,1,7," TøQuı ®Ëu"},
	[7] = {1,1,8," §Ëu xµo"},
	[8] = {1,1,9,"C¶i xµo tái"},
	[9] = {1,1,10,"Thiªu §ao Tö"},
	[10] = {1,1,11,"N÷ Nhi Hång"},
	[11] = {1,1,12,"§¹o Hoa H­¬ng"},
	[12] = {1,1,13,"Tóy Méng Töu"},
	[13] = {1,1,14," C¬m chiªn trøng"},
	[14] = {1,1,15," B¸nh Bét vµng"},
	[15] = {1,1,16,"L¹c Mai"},
	[16] = {1,1,17,"NhŞ thËp tø kiÒu Minh NguyÖt D¹"},
	[17] = {1,1,18,"Méc Lan H­¬ng"},
	[18] = {1,1,19,"T©y B¾c Väng"},
}

ITEM_COMPERE	= {					-- Ö÷»éÈËÍâÒÂ
	{0, 109, 177},	--×âµÄ
	{0, 109, 178},
	{0, 109, 179},
	{0, 109, 180},
	{0, 109, 241},	--ÂòµÄ
	{0, 109, 242},
	{0, 109, 243},
	{0, 109, 244},
}

SKILL_CANDY		= 870		-- ¼¼ÄÜID£ºÈöÏ²ÌÇ
--============================================================================================
function cancel()
	-- Do nothing
end

-- ÉèÖÃ»éÀñµÄ²½Öè:1±íÊ¾¿ÉÒÔÌáÇ×ÁË£¬2±íÊ¾ÄÉ²Ê£¨½»Ã½½ğºÍÀñÆ·£©³É¹¦£¬
--3±íÊ¾ÎÊÃû£¨½»»¥ÇëÌù£¬ÉèÖÃÁµÈËÂë£©³É¹¦£¬4±íÊ¾´óÆ¸³É¹¦£¬5±íÊ¾¶©³¡µØ³É¹¦ÁË
function set_wedding_step(step)
	local stat = floor(GetTask(TASK_WEDDING) / 1000)
	SetTask(TASK_WEDDING, stat*1000 + mod(step, 1000))
end

-- »ñÈ¡»éÀñµÄ²½Öè
function get_wedding_step()
	return mod(GetTask(TASK_WEDDING), 1000)
end

-- ÉèÖÃ»éÀñµÄ×´Ì¬£¬1±íÊ¾Í¶±ê³É¹¦»òÕßÑ¡ÔñÁË²»ĞèÒª½á»é³¡µØ
function set_wedding_stat(stat)
	local step = mod(GetTask(TASK_WEDDING), 1000)
	SetTask(TASK_WEDDING, step + stat * 1000)
end

-- »ñÈ¡»éÀñµÄ×´Ì¬
function get_wedding_stat()
	return floor(GetTask(TASK_WEDDING) / 1000)
end

-- ÊÇ·ñÒÑ¾­½á»é
function is_married(player)
	local old_idx = PlayerIndex
	local result = 0
	PlayerIndex = player
	if (GetMateName() ~= "") then
		result = 1
	end
	PlayerIndex = old_idx
	return result
end

-- »ñÈ¡¶ÓÎéÖĞµÄÒâÖĞÈËµÄÍæ¼ÒË÷Òı
function get_team_lover(myself)
	for i = 1, 2 do
		local index = GetTeamMember(i)
		if (index ~= myself) then
			return index
		end
	end
	return 0
end

-- »ñÈ¡ÒâÖĞÈËÔÚ¶ÓÎéÖĞµÄË÷Òı
function get_love_team_index(myself)
	for i = 1, 2 do
		local index = GetTeamMember(i)
		if (index ~= myself) then
			return i
		end
	end
	return 0
end

-- »ñÈ¡ÁµÈËµÄÃû×Ö±àÂë
function get_lover_code(index)
	return GetTask(TASK_WEDDING_LOVER, index)
end

-- ÉèÖÃÁµÈËµÄÃû×Ö±àÂë
function set_lover_code(index, code)
	SetTask(TASK_WEDDING_LOVER, code, 0, index)
end

function encode_date(year, mon, day)
	return year * 600 + mon * 40 + day
end

function decode_date(date)
	local year = floor(date / 600)
	local rest = mod(date, 600)
	local mon = floor(rest / 40)
	local day = mod(rest, 40)
	return year, mon, day
end

function encode_param2(period, type)
	return period * 100 + type
end

function decode_param2(param2)
	local type = mod(param2, 100)
	local period = floor(param2 / 100)
	return period, type
end

-- ½ñÌì
function curr_date()
	local year = tonumber(date("%Y"))
	local mon = tonumber(date("%m"))
	local day = tonumber(date("%d"))
	return encode_date(year, mon, day)
end

function cmp_time(hour1, min1, hour2, min2)
	if (hour1 > hour2) then
		return 1
	elseif (hour1 < hour2) then
		return -1
	elseif (min1 > min2) then
		return 1
	elseif (min1 < min2) then
		return -1
	else
		return 0
	end
end

function cmp_datetime(date1, time1, date2, time2)
	-- DEBUG
	-- print(format("cmp_datetime(%d, %d, %d, %d)", date1, time1, date2, time2))
	if (date1 > date2) then
		return 1
	elseif (date1 < date2) then
		return -1
	elseif (time1 > time2) then
		return 1
	elseif (time1 == time2) then
		return 0
	else
		return -1
	end
end

-- »ñÈ¡µ±Ç°Ê±¶Î
function curr_period()
	local hour = tonumber(date("%H"))
	local min = tonumber(date("%M"))
	for i = 1, getn(map_period) do
		local period_info = map_period[i]
		if (cmp_time(hour, min, period_info[1], period_info[2]) >= 0 and
			cmp_time(hour, min, period_info[3], period_info[4]) <= 0) then
			return i
		end
	end
	return -1
end

-- ·ÇÈòÄê
map_days = {
	[1] = 31,
	[2] = 28,
	[3] = 31,
	[4] = 30,
	[5] = 31,
	[6] = 30,
	[7] = 31,
	[8] = 31,
	[9] = 30,
	[10] = 31,
	[11] = 30,
	[12] = 31
}

-- ÈòÄê
map_days_leapyear = {
	[1] = 31,
	[2] = 29,
	[3] = 31,
	[4] = 30,
	[5] = 31,
	[6] = 30,
	[7] = 31,
	[8] = 31,
	[9] = 30,
	[10] = 31,
	[11] = 30,
	[12] = 31
}

function encode_time(hour, min, sec)
	return hour * 3600 + min * 60 + sec
end


function decode_time(time)
	local hour = floor(time / 3600)
	local rest = mod(time, 3600)
	local min = floor(rest / 60)
	local sec = mod(rest, 60)
	return hour, min, sec
end

-- Ç°Ò»Ìì
function prev_date(date)
	local days = map_days
	local year, mon, day = decode_date(date)
	if (mod(year, 4) == 0) then
		days = map_days_leapyear
	end
	if (day > 1) then
		return encode_date(year, mon, day - 1)
	elseif (mon > 1) then
		return encode_date(year, mon - 1, days[mon - 1])
	else
		return encode_date(year - 1, 12, 31)
	end
end

-- ÏÂÒ»Ìì
function next_date(date)
	local days = map_days
	local year, mon, day = decode_date(date)
	if (mod(year, 4) == 0) then
		days = map_days_leapyear
	end

	if (day < days[mon]) then
		return encode_date(year, mon, day + 1)
	elseif (mon < 12) then
		return encode_date(year, mon + 1, 1)
	else
		return encode_date(year + 1, 1, 1)
	end
end

function curr_time()
	local hour = tonumber(date("%H"))
	local min = tonumber(date("%M"))
	local sec = tonumber(date("%S"))
	return encode_time(hour, min, sec)
end

-- »ñÈ¡½ñÌì¿ªÊ¼µÄ¼¸ÌìµÄÈÕÆÚ
function future_days(from, count)
	local date = curr_date()
	for i = 1, from do
		date = next_date(date)
	end
	local days = {}
	for i = 1, count do
		days[i] = date
		date = next_date(date)
	end
	return days
end

-- ÏÂÒ»¸ö½á»é²½ÖèÌáÊ¾
function hint_step(step)
	SetTask(TASK_MARRIAGE_HINT, step)
end

-- ÃÅÅÉ
map_faction = {
	[1] = {"ThiÕu L©m","Tha"},
	[2] = {"Vâ §ang","Tha"},
	[3] = {"Nga My","Ng­êi ch¬i"},
	[4] = {"C¸i Bang","Tha"},
	[5] = {"§­êng M«n","Ng­êi ch¬i"},
	[6] = {"D­¬ng M«n","Ng­êi ch¬i"},
	[7] = {"Ngò §éc","Ng­êi ch¬i"},
	[8] = {"C«n L«n", "Tha"},
	[9] = {"Minh gi¸o", "Tha"},
	[10] = {"Thóy Yªn", "Ng­êi ch¬i"},
}

-- ³öÊ¦
function faction_graduate(faction)
	if (GetPlayerFaction() ~= faction) then
		Talk(1, "",
			"Ng­¬i kh«ng ph¶i lµ ®Ö tö " .. map_faction[faction][1] .. ", muèn xuÊt s­ ph¶i ®Õn gÆp ch­ëng m«n trùc tiÕp cña m×nh!")
	elseif (GetTask(TASK_FACTION_OUT) ~= 0) then
		Talk(1, "", "Ng­¬i ®· lµ ®Ö tö xuÊt s­")
	else
		SetTask(TASK_FACTION_OUT, 1)
		Talk(1, "", "Nam n÷ yªu nhau lµ chuyÖn ®­¬ng nhiªn. Ng­¬i ®· t×m ®­îc ı trung nh©n, ta ®ång ı cho ng­¬i xuÊt s­. Chóc ng­¬i b¸ch niªn giai l·o!")
	end
end

-- ÊÇ·ñÖ÷»éÈË
function is_compere()
	local t1, t2, t3 = GetPlayerEquipInfo(7)
	for i = 1, getn(ITEM_COMPERE) do
		local cloth = ITEM_COMPERE[i]
		if (t1 == cloth[1] and
			t2 == cloth[2] and
			t3 == cloth[3]) then
			return 1
		end
	end
	return 0
end
--ÊÇ·ñÔÚ³¡µØÄÚ
function in_fields()
	local nMapID = GetWorldPos();
	for i=1,getn(map_fieldpos) do
		if nMapID == map_fieldpos[i][1] then
			return 1;
		end;
	end;
	return 0;
end;

function add_invitation(count, date, para)
	for i = 1, count do
		local res, item = AddItem(ITEM_INVITATION[1], ITEM_INVITATION[2], ITEM_INVITATION[3], 1)
		if (res ~= 0) then
			SetItemParam(item, 0, date)	-- »éÀñÈÕÆÚ
			SetItemParam(item, 1, para)	-- »éÀñÊ±¶ÎºÍÀàĞÍ
		end
	end
	Msg2Player(format("B¹n nhËn ®­îc %d thiÖp mêi h«n lÔ", count))
end

function marriage_check_kotow()
	local tScale = { 
			[1] = {1605,3156,8},
			[2] = {1670,3203,12},
			[3] = {1612,3143,12},
			[4] = {1658,3262,12},
			}
	local nMapID = GetWorldPos();
	local nFieldID = 0;
	for i=1,getn(map_fieldpos) do
		if nMapID == map_fieldpos[i][1] then
			nFieldID = i;
		end;
	end;
	if nFieldID == 0 then
		return 0;	--²»ÔÚµØÍ¼ÄÚ£¬²»×÷ÌáÊ¾
	end;
	if GetName() ~= GetMissionS(MS_BRIDEGROOM) and GetName() ~= GetMissionS(MS_BRIDE) then
		return 0;	--Èç¹û²»ÊÇ±¾³¡µØµÄĞÂÀÉĞÂÄï
	end;
	if GetMateName() ~= "" then
		Msg2Player("Ng­¬i ®· kÕt h«n");
		return 0;
	end;
	if GetTeamSize() ~= 2 then
		Msg2Player("Hai ng­êi tæ ®éi víi nhau")
		return 0;
	end;
	if GetMissionV(MV_CAN_MARRY) ~= 1 then
		Msg2Player("B¸i thiªn ®Şa");
		return 0;
	end;
	if gf_GetDistance(tScale[nFieldID][1],tScale[nFieldID][2]) > tScale[nFieldID][3] then
		Msg2Player("Ng­¬i kh«ng râ rµng");
		return 0;
	end;
	local lover = get_team_lover(PlayerIndex)
	if GetTask(TASK_WEDDING_LOVER) ~= Hash(GetName(lover)) then
		Msg2Player("®èi ph­¬ng kh«ng hÒ cã h«n ­íc víi ng­¬i"); 
		return 0;
	end;
	SetTask(TASK_KOTOW,1);
	if GetTask(TASK_KOTOW) == 1 and GetTask(TASK_KOTOW,lover) == 1 then
		marriage_setting();
		Msg2Player("B©y giê hai ng­¬i chİnh thøc lµ phu thª");
		Msg2SomeOne("B©y giê hai ng­¬i chİnh thøc lµ phu thª",lover);
		return 1;
	else
		return 0;
	end;
end;

function marriage_setting()
	local nOldPlayerIndex = PlayerIndex;
	local lover = get_team_lover(PlayerIndex)
	-- ¸ù¾İºÃ¸Ğ¶ÈÉèÖÃ³õÊ¼Í¬ĞÄÖµ
	local lover_idx = get_love_team_index(PlayerIndex)
	local friend_grade = GetMemberFriendliness(lover_idx)
	local love_grade = 0
	if (friend_grade >= 1801) then
		love_grade = 300
	elseif (friend_grade >= 1401) then
		love_grade = 260
	elseif (friend_grade >= 1001) then
		love_grade = 220
	elseif (friend_grade >= 601) then
		love_grade = 180
	elseif (friend_grade >= 201) then
		love_grade = 140
	else
		love_grade = 100
	end
	-- ÉèÖÃÍ¬ĞÄÖµ
	SetTask(TASK_LOVEGRADE, love_grade)
	SetTask(TASK_LOVEGRADE, love_grade, 0, lover)
	-- ÉèÖÃ½á»éÈÕÆÚ
	local day = curr_date()
	SetTask(TASK_MARRYDATE, day) 
	SetTask(TASK_MARRYDATE, day, 0, lover) 
	-- ÉèÖÃÅäÅ¼ÌåĞÍ
	SetTask(TASK_MATESTYLE, GetBody(lover))
	SetTask(TASK_MATESTYLE, GetBody(), 0, lover)
	-- ½á»é
	DoMarry(lover)
	WriteLog("[KÕt h«n]:"..GetName().."kÕt h«n, b¹n ®êi lµ"..GetName(lover)..", ®é h¶o h÷u:"..friend_grade..", trŞ sè t×nh c¶m ban ®Çu lµ:"..love_grade)
	SaveNow();
	PlayerIndex = lover;
	SaveNow();
	PlayerIndex = nOldPlayerIndex;
end;

function add_qingtie_packet(nCount)
	if nCount == 0 then
		return 0;
	end;
	local nRetCode,nItemIdx = 0,0;
	for i=1,nCount do
		nRetCode,nItemIdx = AddItem(ITEM_QINGTIE_PACKET[1],ITEM_QINGTIE_PACKET[2],ITEM_QINGTIE_PACKET[3],1);
		if nRetCode ~= 0 then
			SetItemParam(nItemIdx,0,2);
		end;
		WriteLog("[KÕt h«n]:"..GetName().." §· mua 1 thiÖp mêi ");
	end;
end;
-- Çå³ıÔ¤¶©ĞÅÏ¢
function clear_subs()
	SetTask(TASK_WEDDING_COST, 0)
	SetTask(TASK_WEDDING_DATE, 0)
	SetTask(TASK_WEDDING_FIELD, 0)
	SetTask(TASK_GOT_INVITATION,0)
end

--	Çå³ıËùÓĞ½á»éĞÅÏ¢£ºÈ¡Ïû»éÔ¼¡¢Àë»é
function clear_task()
	clear_subs()
	SetTask(TASK_WEDDING, 0)
	SetTask(TASK_WEDDING_LOVER, 0)
	SetTask(TASK_MARRYDATE,0);
	SetTask(TASK_BUY_RING);
end